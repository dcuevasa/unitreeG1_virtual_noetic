<launch>
    <arg name="rname" default="g1"/>
    <arg name="robot_path" value="(find $(arg rname)_description)"/>
    <arg name="dollar" value="$"/>

    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <!-- Debug mode will hung up the robot, use "true" or "false" to switch it. -->
    <arg name="user_debug" default="false"/>
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="$(arg paused)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(arg dollar)$(arg robot_path)/xacro/robot.xacro' 
           DEBUG:=$(arg user_debug)"/>

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <!-- Set trunk and joint positions at startup -->
    <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
          args="-urdf -z 0.735 -model $(arg rname)_gazebo -param robot_description
                -J left_knee_joint 0.2
                -J right_knee_joint 0.2
                -J left_ankle_pitch_joint -0.3
                -J right_ankle_pitch_joint -0.3
                -J left_hip_pitch_joint -0.1
                -J right_hip_pitch_joint -0.1
                -J left_hip_roll_joint 0.2
                -J right_hip_roll_joint -0.2"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(arg dollar)$(arg robot_path)/config/robot_control.yaml" command="load"/>

    <!-- Luego los controladores de trayectoria en un spawner separado -->
    <node pkg="controller_manager" type="spawner" name="trajectory_controller_spawner" respawn="false"
      output="screen" ns="/$(arg rname)_gazebo" args="
      left_leg_trajectory_controller
      right_leg_trajectory_controller
      left_arm_trajectory_controller
      right_arm_trajectory_controller"/>

    <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false"
      output="screen" ns="/$(arg rname)_gazebo" args="
      joint_state_controller"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
          respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg rname)_gazebo/joint_states"/>
    </node>

    <!-- load the parameter unitree_controller -->
    <include file="$(find unitree_controller)/launch/set_ctrl.launch">
        <arg name="rname" value="$(arg rname)"/>
    </include>

    <node name="cmd_vel" pkg="unitree_gazebo" type="g1_cmd_vel.py" output="screen">
        <param name="model_name" value="$(arg rname)_gazebo"/>
    </node>

</launch>
